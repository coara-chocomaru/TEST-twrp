name: Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: "MANIFEST_URL (use git@â€¦ for SSH if desired)"
        required: true
        default: "https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp"
        type: string
      MANIFEST_BRANCH:
        description: "MANIFEST_BRANCH"
        required: true
        default: "twrp-14.1"
        type: string
      DEVICE_TREE_URL:
        description: "DEVICE_TREE_URL"
        required: true
        default: "https://github.com/coara-chocomaru/TEST-twrp"
        type: string
      DEVICE_TREE_BRANCH:
        description: "DEVICE_TREE_BRANCH"
        required: true
        default: "a25ex"
        type: string
      DEVICE_PATH:
        description: "DEVICE_PATH"
        required: true
        default: "device/samsung/a25ex"
        type: string
      COMMON_TREE_URL:
        description: "COMMON_TREE_URL (leave blank if none)"
        required: false
        default: ""
        type: string
      COMMON_PATH:
        description: "COMMON_PATH (leave blank if none)"
        required: false
        default: ""
        type: string
      DEVICE_NAME:
        description: "DEVICE_NAME"
        required: true
        default: "a25ex"
        type: string
      MAKEFILE_NAME:
        description: "MAKEFILE_NAME"
        required: true
        default: "twrp_a25ex"
        type: string
      BUILD_TARGET:
        description: "BUILD_TARGET"
        required: true
        default: "recovery"
        type: string

permissions:
  contents: write

jobs:
  build:
    if: ${{ github.event.repository.owner.id == github.event.sender.id }}
    runs-on: ubuntu-latest

    steps:
      - name: Display Run Parameters
        run: |
          echo "::group:: Inputs"
          echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
          echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
          echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
          echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
          echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
          echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
          echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
          echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
          echo "::endgroup::"

      - uses: actions/checkout@v4

      - name: Setup dependencies (Ubuntu 24.04 compatible)
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y \
            gperf gcc-multilib g++-multilib libc6-dev lib32ncurses-dev \
            libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache \
            libreadline-dev liblz4-tool libncurses-dev libsdl1.2-dev libwxgtk3.2-dev \
            lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp \
            qemu-user-static libstdc++-14-dev python3 openjdk-8-jdk

      - name: Setup SSH Keys
        if: startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com')
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo -o ~/bin/repo
          chmod +x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/local/bin/repo

      - name: Init repo
        id: pwd
        run: |
          mkdir workspace
          cd workspace
          echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
          git config --global user.name "AndroidHQ254"
          git config --global user.email "14816738+AndroidHQ254@users.noreply.github.com"
          repo init --depth=1 -u "${{ github.event.inputs.MANIFEST_URL }}" -b "${{ github.event.inputs.MANIFEST_BRANCH }}"

      - name: Repo Sync
        run: |
          cd ${{ steps.pwd.outputs.workspace-folder }}
          repo sync --force-sync --no-clone-bundle --optimized-fetch -j4

      - name: Clone device tree
        run: |
          git clone "${{ github.event.inputs.DEVICE_TREE_URL }}" -b "${{ github.event.inputs.DEVICE_TREE_BRANCH }}" "${{ github.event.inputs.DEVICE_PATH }}"
        working-directory: ${{ steps.pwd.outputs.workspace-folder }}

      - name: Clone common tree
        if: ${{ github.event.inputs.COMMON_TREE_URL != '' && github.event.inputs.COMMON_PATH != '' }}
        run: |
          git clone "${{ github.event.inputs.COMMON_TREE_URL }}" -b "${{ github.event.inputs.DEVICE_TREE_BRANCH }}" "${{ github.event.inputs.COMMON_PATH }}"
        working-directory: ${{ steps.pwd.outputs.workspace-folder }}

      - name: Check build tree
        uses: haya14busa/action-cond@v1
        id: buildtree
        with:
          cond: ${{ github.event.inputs.MANIFEST_BRANCH == 'twrp-11' || github.event.inputs.MANIFEST_BRANCH == 'twrp-14.1' }}
          if_true: twrp
          if_false: omni

      - name: Sync dependencies
        run: |
          cd ${{ steps.pwd.outputs.workspace-folder }}
          bash "${GITHUB_WORKSPACE}/scripts/convert.sh" "${{ github.event.inputs.DEVICE_PATH }}/${{ steps.buildtree.outputs.value }}.dependencies"
          repo sync -j$(nproc)
        continue-on-error: true

      - name: Set swap space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Build recovery
        run: |
          cd ${{ steps.pwd.outputs.workspace-folder }}
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch "${{ github.event.inputs.MAKEFILE_NAME }}-eng"
          make clean
          make "${{ github.event.inputs.BUILD_TARGET }}image" -j$(nproc)

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
            workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
            workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
          name: "${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}"
          tag_name: "${{ github.run_id }}"
          body: |
            Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
            Device: ${{ github.event.inputs.DEVICE_NAME }}
            Target: ${{ github.event.inputs.BUILD_TARGET }}.img
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
